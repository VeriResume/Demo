{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.isObjectLike = isObjectLike;\nexports.default = isPlainObject; // Adapted from https://github.com/jonschlinkert/is-plain-object\n\nfunction isObjectLike(val) {\n  return val != null && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object';\n}\n\nfunction isObject(val) {\n  return isObjectLike(val) && Array.isArray(val) === false;\n}\n\nfunction isObjectObject(o) {\n  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  if (isObjectObject(o) === false) return false; // If has modified constructor\n\n  var ctor = o.constructor;\n  if (typeof ctor !== 'function') return false; // If has modified prototype\n\n  var prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false; // If constructor does not have an Object-specific method\n\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}","map":null,"metadata":{},"sourceType":"script"}