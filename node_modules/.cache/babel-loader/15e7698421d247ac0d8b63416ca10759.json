{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.createIteratee = createIteratee;\nexports.iterateeValue = iterateeValue;\n\nvar _identity = require('./identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaultStrategy = {\n  get: _get3.default\n};\n\nfunction createIteratee() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n\n  function matcher(object) {\n    return function (compareObject) {\n      if (compareObject === object) return true;\n      return Object.keys(object).every(function (key) {\n        return s.get(object, key) === s.get(compareObject, key);\n      });\n    };\n  }\n\n  function propChecker(prop) {\n    return function (object) {\n      return object && !!s.get(object, prop);\n    };\n  }\n\n  return function (value) {\n    if (typeof value === 'function') {\n      return value;\n    }\n\n    if (value === null) {\n      return _identity2.default;\n    }\n\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      return matcher(value);\n    }\n\n    return propChecker(value);\n  };\n}\n\nvar iteratee = createIteratee();\n\nfunction iterateeValue(data, value) {\n  if (typeof value === 'function') {\n    return value(data);\n  }\n\n  if (!Array.isArray(value) && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' && typeof value !== 'string') {\n    return !!value;\n  }\n\n  return iteratee(value)(data);\n}\n\nexports.default = iteratee;","map":null,"metadata":{},"sourceType":"script"}