{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInitialState = createInitialState;\nexports.default = createFormReducer;\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _arraysEqual = require('../utils/arrays-equal');\n\nvar _arraysEqual2 = _interopRequireDefault(_arraysEqual);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _toPath = require('../utils/to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _composeReducers = require('../utils/compose-reducers');\n\nvar _composeReducers2 = _interopRequireDefault(_composeReducers);\n\nvar _batchedEnhancer = require('../enhancers/batched-enhancer');\n\nvar _batchedEnhancer2 = _interopRequireDefault(_batchedEnhancer);\n\nvar _changeActionReducer = require('./form/change-action-reducer');\n\nvar _changeActionReducer2 = _interopRequireDefault(_changeActionReducer);\n\nvar _formActionsReducer = require('./form-actions-reducer');\n\nvar _createField = require('../utils/create-field');\n\nvar _createField2 = _interopRequireDefault(_createField);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction createInitialState(model, state) {\n  var customInitialFieldState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (Array.isArray(state) || (0, _isPlainObject2.default)(state)) {\n    return (0, _createField.createFormState)(model, state, customInitialFieldState, options);\n  }\n\n  return (0, _createField2.default)(model, state, customInitialFieldState, options);\n}\n\nfunction wrapFormReducer(plugin, modelPath, initialState) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n    if (!action.model) return state;\n    var path = (0, _toPath2.default)(action.model);\n\n    if (modelPath.length && !(0, _arraysEqual2.default)(path.slice(0, modelPath.length), modelPath)) {\n      return state;\n    }\n\n    var localPath = path.slice(modelPath.length);\n    return plugin(state, action, localPath);\n  };\n}\n\nfunction createFormReducer(model) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$plugins = options.plugins,\n      plugins = _options$plugins === undefined ? [] : _options$plugins,\n      customInitialFieldState = options.initialFieldState,\n      _options$transformAct = options.transformAction,\n      transformAction = _options$transformAct === undefined ? null : _options$transformAct;\n  var modelPath = (0, _toPath2.default)(model);\n  var initialFormState = createInitialState(model, initialState, customInitialFieldState, options);\n  var defaultPlugins = [_changeActionReducer2.default, (0, _formActionsReducer.createFormActionsReducer)({\n    initialFieldState: customInitialFieldState\n  })];\n  var wrappedPlugins = plugins.concat(defaultPlugins).map(function (plugin) {\n    return wrapFormReducer(plugin, modelPath, initialFormState);\n  });\n  return (0, _batchedEnhancer2.default)(_composeReducers2.default.apply(undefined, _toConsumableArray(wrappedPlugins)), undefined, {\n    transformAction: transformAction\n  });\n}","map":null,"metadata":{},"sourceType":"script"}