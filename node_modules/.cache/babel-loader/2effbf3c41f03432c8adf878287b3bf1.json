{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trackable = exports.createTrack = undefined;\n\nvar _findKey2 = require('../utils/find-key');\n\nvar _findKey3 = _interopRequireDefault(_findKey2);\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _iteratee = require('../utils/iteratee');\n\nvar _isMulti = require('../utils/is-multi');\n\nvar _isMulti2 = _interopRequireDefault(_isMulti);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nvar defaultStrategy = {\n  findKey: _findKey3.default,\n  get: _get3.default\n};\n\nfunction createTrack() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n  var iteratee = (0, _iteratee.createIteratee)(s);\n  return function track(model) {\n    for (var _len = arguments.length, predicates = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      predicates[_key - 1] = arguments[_key];\n    }\n\n    var isPartial = model[0] === '.';\n    return function (fullState, parentModel) {\n      var childModel = isPartial ? model.slice(1) : model;\n      var state = isPartial ? s.get(fullState, parentModel) : fullState;\n\n      var _childModel$split = childModel.split(/\\[\\]\\.?/),\n          _childModel$split2 = _toArray(_childModel$split),\n          parentModelPath = _childModel$split2[0],\n          childModelPaths = _childModel$split2.slice(1);\n\n      var fullPath = parentModelPath;\n      var subState = s.get(state, fullPath);\n      predicates.forEach(function (predicate, i) {\n        var childModelPath = childModelPaths[i];\n        var predicateIteratee = iteratee(predicate);\n        var subPath = childModelPath ? s.findKey(subState, predicateIteratee) + '.' + childModelPath : '' + s.findKey(subState, predicateIteratee);\n        subState = s.get(subState, subPath);\n        fullPath += '.' + subPath;\n      });\n\n      if ((0, _isMulti2.default)(childModel) && predicates.length < childModelPaths.length) {\n        fullPath += '[]';\n      }\n\n      return isPartial ? parentModel + '.' + fullPath : fullPath;\n    };\n  };\n}\n\nvar track = createTrack();\n\nfunction trackable(actionCreator) {\n  return function (model) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof model === 'function') {\n      return function (dispatch, getState) {\n        var modelPath = model(getState());\n        dispatch(actionCreator.apply(undefined, [modelPath].concat(args)));\n      };\n    }\n\n    return actionCreator.apply(undefined, [model].concat(args));\n  };\n}\n\nexports.default = track;\nexports.createTrack = createTrack;\nexports.trackable = trackable;","map":null,"metadata":{},"sourceType":"script"}